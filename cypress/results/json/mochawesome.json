{
  "stats": {
    "suites": 2,
    "tests": 6,
    "passes": 5,
    "pending": 2,
    "failures": -1,
    "start": "2023-11-17T06:35:07.690Z",
    "end": "2023-11-17T06:35:14.603Z",
    "duration": 6913,
    "testsRegistered": 7,
    "passPercent": 100,
    "pendingPercent": 28.57142857142857,
    "other": 1,
    "hasOther": true,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "51aaed69-c745-44f5-af2f-6d86bcbd24bd",
      "title": "",
      "fullFile": "cypress\\e2e\\product.cy.js",
      "file": "cypress\\e2e\\product.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f562e652-f5b7-4daa-9288-d84c8550c2b7",
          "title": "CRUD - PRODUTO",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "deve cadastrar produto com sucesso",
              "fullTitle": "CRUD - PRODUTO deve cadastrar produto com sucesso",
              "timedOut": null,
              "duration": 2276,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.postProduct(product).then(res => {\n  expect(res.status).to.eql(201);\n  expect(res.body.message).to.eql('Cadastro realizado com sucesso');\n  Cypress.env('productId', res.body._id);\n});",
              "err": {},
              "uuid": "c782c3b7-4006-4c63-af69-208e34e9b72e",
              "parentUUID": "f562e652-f5b7-4daa-9288-d84c8550c2b7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve buscar produto por ID com sucesso",
              "fullTitle": "CRUD - PRODUTO deve buscar produto por ID com sucesso",
              "timedOut": null,
              "duration": 765,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let id = Cypress.env('productId');\ncy.getProductById(id).then(res => {\n  expect(res.status).to.eql(200);\n  expect(res.body.nome).to.equal(product.nome);\n  let resBodyPreco = parseFloat(res.body.preco).toFixed(2);\n  expect(resBodyPreco).to.equal(product.preco);\n  expect(res.body.descricao).to.equal(product.descricao);\n  expect(res.body.quantidade).to.equal(product.quantidade);\n  expect(res.body._id).to.eql(Cypress.env('productId', res.body._id));\n});",
              "err": {},
              "uuid": "62d16618-a78e-4718-8d1d-066ba94abbbf",
              "parentUUID": "f562e652-f5b7-4daa-9288-d84c8550c2b7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve editar produto por ID com sucesso",
              "fullTitle": "CRUD - PRODUTO deve editar produto por ID com sucesso",
              "timedOut": null,
              "duration": 1303,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let id = Cypress.env('productId');\ncy.putProduct(product, id).then(res => {\n  expect(res.status).to.eql(200);\n  expect(res.body.message).to.equal('Registro alterado com sucesso');\n});\ncy.log('buscando produto pelo ID');\ncy.getProductById(id).then(res => {\n  expect(res.status).to.eql(200);\n  expect(res.body.nome).to.equal(product.putNome);\n  let resBodyPreco = parseFloat(res.body.preco).toFixed(2);\n  expect(resBodyPreco).to.equal(product.putPreco);\n  expect(res.body.descricao).to.equal(product.putDescricao);\n  expect(res.body.quantidade).to.equal(product.putQuantidade);\n  expect(res.body._id).to.eql(Cypress.env('productId', res.body._id));\n});",
              "err": {},
              "uuid": "9930cb44-6b26-4dc4-92ff-e83b9b1c5c71",
              "parentUUID": "f562e652-f5b7-4daa-9288-d84c8550c2b7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve excluir produto por ID com sucesso",
              "fullTitle": "CRUD - PRODUTO deve excluir produto por ID com sucesso",
              "timedOut": null,
              "duration": 1266,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let id = Cypress.env('productId');\ncy.deleteProduct(id).then(res => {\n  expect(res.status).to.eql(200);\n  expect(res.body.message).to.equal('Registro excluído com sucesso');\n});\ncy.log('validando que o produto foi excluido, consultando pelo ID');\ncy.getProductById(id).then(res => {\n  expect(res.status).to.eql(400);\n  expect(res.body.message).to.equal('Produto não encontrado');\n});",
              "err": {},
              "uuid": "555924cc-d80d-44bb-a00f-eb12215cf412",
              "parentUUID": "f562e652-f5b7-4daa-9288-d84c8550c2b7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c782c3b7-4006-4c63-af69-208e34e9b72e",
            "62d16618-a78e-4718-8d1d-066ba94abbbf",
            "9930cb44-6b26-4dc4-92ff-e83b9b1c5c71",
            "555924cc-d80d-44bb-a00f-eb12215cf412"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5610,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "078d0a85-5068-4b6a-82ef-7afc22eb6521",
          "title": "Testes funcionais - PRODUTO",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Não deve cadastrar produto com nome já utilizado",
              "fullTitle": "Testes funcionais - PRODUTO Não deve cadastrar produto com nome já utilizado",
              "timedOut": null,
              "duration": 1241,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.postProduct(product).then(res => {\n  expect(res.status).to.eql(201);\n  expect(res.body.message).to.eql('Cadastro realizado com sucesso');\n  Cypress.env('productId', res.body._id);\n});\ncy.log('tentativa de cadastro de produto com nome duplicado');\ncy.postProduct(product).then(res => {\n  expect(res.status).to.eql(400);\n  expect(res.body.message).to.eql('Já existe produto com esse nome');\n});",
              "err": {},
              "uuid": "5f570811-8c6b-4656-bf01-f82b9929671b",
              "parentUUID": "078d0a85-5068-4b6a-82ef-7afc22eb6521",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Não deve excluir produto que faz parte de carrinho",
              "fullTitle": "Testes funcionais - PRODUTO Não deve excluir produto que faz parte de carrinho",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "ba2a4657-4d3f-49a9-aef6-7b7ca14c774e",
              "parentUUID": "078d0a85-5068-4b6a-82ef-7afc22eb6521",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Se não encontrado usuário com o ID informado realiza novo cadastro ao invés de alteração",
              "fullTitle": "Testes funcionais - PRODUTO Se não encontrado usuário com o ID informado realiza novo cadastro ao invés de alteração",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "ff54d0ec-f645-430f-8b44-faf63c8b7615",
              "parentUUID": "078d0a85-5068-4b6a-82ef-7afc22eb6521",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5f570811-8c6b-4656-bf01-f82b9929671b"
          ],
          "failures": [],
          "pending": [
            "ba2a4657-4d3f-49a9-aef6-7b7ca14c774e",
            "ff54d0ec-f645-430f-8b44-faf63c8b7615"
          ],
          "skipped": [],
          "duration": 1241,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": true,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/results/json",
        "quiet": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}