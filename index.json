{
  "stats": {
    "suites": 2,
    "tests": 12,
    "passes": 10,
    "pending": 2,
    "failures": 0,
    "testsRegistered": 12,
    "passPercent": 83.33333333333333,
    "pendingPercent": 16.666666666666668,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "start": "2023-11-17T06:54:12.206Z",
    "end": "2023-11-17T06:54:35.544Z",
    "duration": 23338
  },
  "results": [
    {
      "uuid": "4f593953-435b-4c97-be09-67bd3c4fb253",
      "title": "",
      "fullFile": "cypress\\api\\user.cy.js",
      "file": "cypress\\api\\user.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "904cb964-45b8-4f50-801b-b454a415b34f",
          "title": "CRUD - USER",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve cadastrar user com sucesso",
              "fullTitle": "CRUD - USER Deve cadastrar user com sucesso",
              "timedOut": null,
              "duration": 709,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.postUser(_user.user).then(res => {\n  expect(res.status).to.eql(201);\n  expect(res.body.message).to.eql('Cadastro realizado com sucesso');\n  Cypress.env('userId', res.body._id);\n});",
              "err": {},
              "uuid": "e79bd1a6-c149-4cf3-99c9-66c80cc3ebc8",
              "parentUUID": "904cb964-45b8-4f50-801b-b454a415b34f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve listar user pelo Id",
              "fullTitle": "CRUD - USER Deve listar user pelo Id",
              "timedOut": null,
              "duration": 644,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.api({\n  method: 'GET',\n  url: `/usuarios/${Cypress.env('userId')}`\n}).then(res => {\n  expect(res.status).to.eql(200);\n  expect(res.body.nome).to.equal(_user.user.nome);\n  expect(res.body.email).to.equal(_user.user.email);\n  expect(res.body._id).to.eql(Cypress.env('userId', res.body._id));\n});",
              "err": {},
              "uuid": "c9775ae8-9289-48d9-8ce5-fc84756820c5",
              "parentUUID": "904cb964-45b8-4f50-801b-b454a415b34f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve editar user",
              "fullTitle": "CRUD - USER Deve editar user",
              "timedOut": null,
              "duration": 1214,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.api({\n  method: 'PUT',\n  url: `/usuarios/${Cypress.env('userId')}`,\n  body: {\n    \"nome\": _user.user.putNome,\n    \"email\": _user.user.email,\n    \"password\": _user.user.password,\n    \"administrador\": _user.user.administrador\n  }\n}).then(res => {\n  expect(res.status).to.eql(200);\n  expect(res.body.message).to.equal('Registro alterado com sucesso');\n});\ncy.log('consultando user pelo Id');\ncy.api({\n  method: 'GET',\n  url: `/usuarios/${Cypress.env('userId')}`\n}).then(res => {\n  expect(res.status).to.eql(200);\n  expect(res.body.nome).to.equal(_user.user.putNome);\n  expect(res.body.email).to.equal(_user.user.email);\n  expect(res.body._id).to.eql(Cypress.env('userId', res.body._id));\n});",
              "err": {},
              "uuid": "7ee47193-a8b6-40c1-94eb-239a31cd2503",
              "parentUUID": "904cb964-45b8-4f50-801b-b454a415b34f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve excluir user",
              "fullTitle": "CRUD - USER Deve excluir user",
              "timedOut": null,
              "duration": 1227,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.api({\n  method: 'DELETE',\n  url: `/usuarios/${Cypress.env('userId')}`\n}).then(res => {\n  expect(res.status).to.eql(200);\n  expect(res.body.message).to.equal('Registro excluído com sucesso');\n});\ncy.log('Validando que o user foi excluido, consultando pelo ID');\ncy.api({\n  failOnStatusCode: false,\n  method: 'GET',\n  url: `/usuarios/${Cypress.env('userId')}`\n}).then(res => {\n  expect(res.status).to.eql(400);\n  expect(res.body.message).to.equal('Usuário não encontrado');\n});",
              "err": {},
              "uuid": "5e690c13-64e8-42e2-bb04-be8e2ddd666e",
              "parentUUID": "904cb964-45b8-4f50-801b-b454a415b34f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e79bd1a6-c149-4cf3-99c9-66c80cc3ebc8",
            "c9775ae8-9289-48d9-8ce5-fc84756820c5",
            "7ee47193-a8b6-40c1-94eb-239a31cd2503",
            "5e690c13-64e8-42e2-bb04-be8e2ddd666e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3794,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d4dd4d38-decb-44e8-b31f-8440ce85b0ba",
          "title": "Testes funcionais - USER",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Não deve cadastrar mais de um user com mesmo e-mail",
              "fullTitle": "Testes funcionais - USER Não deve cadastrar mais de um user com mesmo e-mail",
              "timedOut": null,
              "duration": 1300,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.postUser(_user.user).then(res => {\n  expect(res.status).to.eql(201);\n  expect(res.body.message).to.eql('Cadastro realizado com sucesso');\n  Cypress.env('userId', res.body._id);\n});\ncy.log('tentativa de cadastro duplicado');\ncy.postUser(_user.user).then(res => {\n  expect(res.status).to.eql(400);\n  expect(res.body.message).to.eql('Este email já está sendo usado');\n});",
              "err": {},
              "uuid": "be81507e-320e-4268-a0a6-4b38e71c4529",
              "parentUUID": "d4dd4d38-decb-44e8-b31f-8440ce85b0ba",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "be81507e-320e-4268-a0a6-4b38e71c4529"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1300,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "a13d45a3-bf68-49dd-987b-0895cfe6a1e3",
      "title": "",
      "fullFile": "cypress\\api\\product.cy.js",
      "file": "cypress\\api\\product.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e23990d8-9695-4a14-bc68-015855437bfb",
          "title": "CRUD - PRODUTO",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "deve cadastrar produto com sucesso",
              "fullTitle": "CRUD - PRODUTO deve cadastrar produto com sucesso",
              "timedOut": null,
              "duration": 2170,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.postProduct(product).then(res => {\n  expect(res.status).to.eql(201);\n  expect(res.body.message).to.eql('Cadastro realizado com sucesso');\n  Cypress.env('productId', res.body._id);\n});",
              "err": {},
              "uuid": "51085343-522d-4416-8d04-ca17d35e5702",
              "parentUUID": "e23990d8-9695-4a14-bc68-015855437bfb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve buscar produto por ID com sucesso",
              "fullTitle": "CRUD - PRODUTO deve buscar produto por ID com sucesso",
              "timedOut": null,
              "duration": 648,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let id = Cypress.env('productId');\ncy.getProductById(id).then(res => {\n  expect(res.status).to.eql(200);\n  expect(res.body.nome).to.equal(product.nome);\n  let resBodyPreco = parseFloat(res.body.preco).toFixed(2);\n  expect(resBodyPreco).to.equal(product.preco);\n  expect(res.body.descricao).to.equal(product.descricao);\n  expect(res.body.quantidade).to.equal(product.quantidade);\n  expect(res.body._id).to.eql(Cypress.env('productId', res.body._id));\n});",
              "err": {},
              "uuid": "92e907e1-6d28-46e3-b0af-aaea1bccdd1e",
              "parentUUID": "e23990d8-9695-4a14-bc68-015855437bfb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve editar produto por ID com sucesso",
              "fullTitle": "CRUD - PRODUTO deve editar produto por ID com sucesso",
              "timedOut": null,
              "duration": 1313,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let id = Cypress.env('productId');\ncy.putProduct(product, id).then(res => {\n  expect(res.status).to.eql(200);\n  expect(res.body.message).to.equal('Registro alterado com sucesso');\n});\ncy.log('buscando produto pelo ID');\ncy.getProductById(id).then(res => {\n  expect(res.status).to.eql(200);\n  expect(res.body.nome).to.equal(product.putNome);\n  let resBodyPreco = parseFloat(res.body.preco).toFixed(2);\n  expect(resBodyPreco).to.equal(product.putPreco);\n  expect(res.body.descricao).to.equal(product.putDescricao);\n  expect(res.body.quantidade).to.equal(product.putQuantidade);\n  expect(res.body._id).to.eql(Cypress.env('productId', res.body._id));\n});",
              "err": {},
              "uuid": "ee2e4537-43f0-4fb8-bae7-e497b08da0b1",
              "parentUUID": "e23990d8-9695-4a14-bc68-015855437bfb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve excluir produto por ID com sucesso",
              "fullTitle": "CRUD - PRODUTO deve excluir produto por ID com sucesso",
              "timedOut": null,
              "duration": 1262,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let id = Cypress.env('productId');\ncy.deleteProduct(id).then(res => {\n  expect(res.status).to.eql(200);\n  expect(res.body.message).to.equal('Registro excluído com sucesso');\n});\ncy.log('validando que o produto foi excluido, consultando pelo ID');\ncy.getProductById(id).then(res => {\n  expect(res.status).to.eql(400);\n  expect(res.body.message).to.equal('Produto não encontrado');\n});",
              "err": {},
              "uuid": "f25f96c4-f1a6-4de7-8373-97460bc7fbae",
              "parentUUID": "e23990d8-9695-4a14-bc68-015855437bfb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "51085343-522d-4416-8d04-ca17d35e5702",
            "92e907e1-6d28-46e3-b0af-aaea1bccdd1e",
            "ee2e4537-43f0-4fb8-bae7-e497b08da0b1",
            "f25f96c4-f1a6-4de7-8373-97460bc7fbae"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5393,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "31176b88-d2a4-49ae-8800-8f9e17a7e3d3",
          "title": "Testes funcionais - PRODUTO",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Não deve cadastrar produto com nome já utilizado",
              "fullTitle": "Testes funcionais - PRODUTO Não deve cadastrar produto com nome já utilizado",
              "timedOut": null,
              "duration": 1241,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.postProduct(product).then(res => {\n  expect(res.status).to.eql(201);\n  expect(res.body.message).to.eql('Cadastro realizado com sucesso');\n  Cypress.env('productId', res.body._id);\n});\ncy.log('tentativa de cadastro de produto com nome duplicado');\ncy.postProduct(product).then(res => {\n  expect(res.status).to.eql(400);\n  expect(res.body.message).to.eql('Já existe produto com esse nome');\n});",
              "err": {},
              "uuid": "b8f5d4ca-04c1-43de-aed0-7e700b4fe2eb",
              "parentUUID": "31176b88-d2a4-49ae-8800-8f9e17a7e3d3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Não deve excluir produto que faz parte de carrinho",
              "fullTitle": "Testes funcionais - PRODUTO Não deve excluir produto que faz parte de carrinho",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "ce9c866b-3875-459f-8948-a21e609d466f",
              "parentUUID": "31176b88-d2a4-49ae-8800-8f9e17a7e3d3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Se não encontrado usuário com o ID informado realiza novo cadastro ao invés de alteração",
              "fullTitle": "Testes funcionais - PRODUTO Se não encontrado usuário com o ID informado realiza novo cadastro ao invés de alteração",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "fec66ab1-c66d-4f25-9fbd-96cdbc953617",
              "parentUUID": "31176b88-d2a4-49ae-8800-8f9e17a7e3d3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b8f5d4ca-04c1-43de-aed0-7e700b4fe2eb"
          ],
          "failures": [],
          "pending": [
            "ce9c866b-3875-459f-8948-a21e609d466f",
            "fec66ab1-c66d-4f25-9fbd-96cdbc953617"
          ],
          "skipped": [],
          "duration": 1241,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": true,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/results/json",
        "quiet": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}